apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    namespace "com.sdk.lib_webrtc"
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 34
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main {
        java.srcDirs = [
                "src/main/java/sdk/android/api",
                "src/main/java/sdk/android/src/java",
                "src/main/java/rtc_base/java/src",
                "src/main/java/modules/audio_device/android/java/src",
        ]

        jniLibs.srcDir 'libs'
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
}

publishing {
    publications {
        // 使用 MavenPublication 类型创建 MavenPublication 对象
        register("maven", MavenPublication) {
            // 配置 Maven 发布的基本信息
            it.groupId = "net.armcloud.armcloudrtc"
            it.artifactId = "webrtc5776"
            it.version = "1.2.3"
            it.artifact(file("build/outputs/aar/libwebrtc5776-release.aar"))

            // 添加所有依赖项
            pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")

                def addDependencies = { String configurationName ->
                    def dependencies = configurations.findByName(configurationName)
                    dependencies?.dependencies?.each { dependency ->
                        if (dependency.group != null && dependency.version != null) {
                            def dependencyNode = dependenciesNode.appendNode("dependency")
                            dependencyNode.appendNode("groupId", dependency.group)
                            dependencyNode.appendNode("artifactId", dependency.name)
                            dependencyNode.appendNode("version", dependency.version)
                            dependencyNode.appendNode("scope", dependencies.name)
                        }
                    }
                }
                addDependencies("implementation")
                addDependencies("compile")
                addDependencies("api")
                addDependencies("debugImplementation")
                addDependencies("releaseImplementation")
            }

            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("https://maven1.vmos.cn/artifactory/libs-release-armcloud/")
            credentials {
                username = "heguangming"
                password = "WUUpy9gXf2"
            }
        }
    }
}



